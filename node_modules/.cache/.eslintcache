[{"/Users/barmaizel/Documents/vscode/reactmain/battle-v2/src/index.js":"1","/Users/barmaizel/Documents/vscode/reactmain/battle-v2/src/App.jsx":"2","/Users/barmaizel/Documents/vscode/reactmain/battle-v2/src/compoments/Intro.jsx":"3","/Users/barmaizel/Documents/vscode/reactmain/battle-v2/src/compoments/EndGame.jsx":"4","/Users/barmaizel/Documents/vscode/reactmain/battle-v2/src/compoments/Score.jsx":"5","/Users/barmaizel/Documents/vscode/reactmain/battle-v2/src/compoments/Game.jsx":"6","/Users/barmaizel/Documents/vscode/reactmain/battle-v2/src/compoments/TableRow.jsx":"7","/Users/barmaizel/Documents/vscode/reactmain/battle-v2/src/compoments/Card.jsx":"8","/Users/barmaizel/Documents/vscode/reactmain/battleGame/src/index.js":"9","/Users/barmaizel/Documents/vscode/reactmain/battleGame/src/App.jsx":"10","/Users/barmaizel/Documents/vscode/reactmain/battleGame/src/compoments/Score.jsx":"11","/Users/barmaizel/Documents/vscode/reactmain/battleGame/src/compoments/Intro.jsx":"12","/Users/barmaizel/Documents/vscode/reactmain/battleGame/src/compoments/EndGame.jsx":"13","/Users/barmaizel/Documents/vscode/reactmain/battleGame/src/compoments/Game.jsx":"14","/Users/barmaizel/Documents/vscode/reactmain/battleGame/src/compoments/Card.jsx":"15","/Users/barmaizel/Documents/vscode/reactmain/battleGame/src/compoments/TableRow.jsx":"16"},{"size":255,"mtime":1653208994708,"results":"17","hashOfConfig":"18"},{"size":4506,"mtime":1653208994691,"results":"19","hashOfConfig":"18"},{"size":2238,"mtime":1653208994693,"results":"20","hashOfConfig":"18"},{"size":1407,"mtime":1653208994693,"results":"21","hashOfConfig":"18"},{"size":1025,"mtime":1653208994694,"results":"22","hashOfConfig":"18"},{"size":5613,"mtime":1653208994693,"results":"23","hashOfConfig":"18"},{"size":284,"mtime":1653208994694,"results":"24","hashOfConfig":"18"},{"size":1576,"mtime":1653208994692,"results":"25","hashOfConfig":"18"},{"size":255,"mtime":1654546457033,"results":"26","hashOfConfig":"27"},{"size":4506,"mtime":1654546457010,"results":"28","hashOfConfig":"27"},{"size":1025,"mtime":1654546457015,"results":"29","hashOfConfig":"27"},{"size":2238,"mtime":1654546457014,"results":"30","hashOfConfig":"27"},{"size":1407,"mtime":1654546457013,"results":"31","hashOfConfig":"27"},{"size":5613,"mtime":1654546457013,"results":"32","hashOfConfig":"27"},{"size":1576,"mtime":1654546457012,"results":"33","hashOfConfig":"27"},{"size":284,"mtime":1654546457015,"results":"34","hashOfConfig":"27"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1c9yuu7",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hujz26",{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/barmaizel/Documents/vscode/reactmain/battle-v2/src/index.js",[],[],"/Users/barmaizel/Documents/vscode/reactmain/battle-v2/src/App.jsx",[],[],"/Users/barmaizel/Documents/vscode/reactmain/battle-v2/src/compoments/Intro.jsx",[],[],"/Users/barmaizel/Documents/vscode/reactmain/battle-v2/src/compoments/EndGame.jsx",[],[],"/Users/barmaizel/Documents/vscode/reactmain/battle-v2/src/compoments/Score.jsx",[],[],"/Users/barmaizel/Documents/vscode/reactmain/battle-v2/src/compoments/Game.jsx",["84"],[],"import React from 'react'\nimport { useState } from 'react';\nimport Card from './Card'\nimport { ToastContainer } from 'react-toastify';\n\nexport default function Game(props) {\n    const [compScore, setCompScore] = useState(0);\n    const [userScore, setUserScore] = useState(0);\n    const [compDeck, setCompDeck] = useState([]);\n    const [userDeck, setUserDeck] = useState([]);\n    const [round, setRound] = useState(0)\n    const [hitButton, setHitButton] = useState('HIT')\n    const [deckClicked, setDeckClicked] = useState(false)\n    const deckFn = () =>{\n        setDeckClicked(true);\n        document.getElementById(\"deckBtn\").disabled=true;\n        let arrays = props.getTwoRandomPacks();\n        setCompScore(0);\n        setUserScore(0);\n        setRound(1);\n        setCompDeck(arrays[0])\n        setUserDeck(arrays[1])\n    }\n    const checkForFinish = () =>{\n        if (compScore > userScore){\n            props.addLoseToPlayer();\n            props.setLastGameRes(\"You Lose\");\n        }\n        else if (compScore < userScore){\n            props.addWinToPlayer();\n            props.setLastGameRes(\"You Won!\");\n        }else{\n            props.addGameToPlayer();\n            props.setLastGameRes('Tie!')\n        }\n        return props.changePage('end')\n    }\n    const checkScore = () => {\n        if (compDeck[0] > userDeck[0]){\n            setCompScore(compScore+1)\n        } else if (userDeck[0] > compDeck[0]){\n            setUserScore(userScore+1)\n        }\n    }\n    const getNextCards= () =>{\n        setCompDeck(compDeck.splice(1,compDeck.length))\n        setUserDeck(userDeck.splice(1,userDeck.length))\n    }\n    const hitBtnFn = () =>{\n        if(deckClicked){\n            if (round===26){\n                setHitButton('FINISH');\n            }\n            if(round<27){\n                checkScore();\n                getNextCards();\n                setRound(round+1);\n            }else{\n                checkForFinish();\n            }\n        }else{\n            props.notify('Get Cards First!')\n        }\n    };\n    return (\n        <div className='container'>\n            <ToastContainer/>\n            <div className='row'>\n                <div className='col-3 myColor'>\n                    <div className='row whiteBorder'>\n                        <div className='myFont smallSize'>Round NO. {round}</div>\n                    </div>\n                    <div className='row whiteBorder'>\n                        <div className='orange myFont bigSize'>All Games</div>\n                        <div className='myFont smallSize'>loses: {props.player.lose}</div>\n                        <div className='green myFont smallSize'>Wins : {props.player.win}</div>\n                    </div>\n                </div>\n                <div className='col-6 whiteBorder'>\n                    <div className=' blurBg myColor myFont'>\n                        <div className='row col-3'>\n                            <div className='col-8'>\n                            </div>\n                            <div className='col-3'>\n                                <h2 className='bigSize'>Computer</h2>\n                                <div className='deckCards'>\n                                    {<Card card={compDeck[0]}/>}\n                                </div> \n                            </div>\n                        </div>\n                        <div className='row col3'>\n                            <div className='col-7'>\n                            </div>\n                            <div className='col-3'>\n                                {<Card card={userDeck[0]}/>}\n                                <h2 className='bigSize playerNameOnGame'>{props.player.name}</h2>\n                            </div>\n                        </div>\n                        <div className='row'>\n                            <div className='col-4'>\n                                <input className='myColor myFont buttons smallSize gameButtons' type={\"submit\"} id='deckBtn' value=\"Get Cards\" onClick={deckFn}></input>\n                            </div>\n                            <div className='col-4'>\n                                <input className=' myColor myFont buttons smallSize gameButtons' onClick={hitBtnFn} type=\"submit\" value={hitButton}></input>            \n                            </div>\n                            <div className='col-4'>\n                                <input onClick={()=>props.changePage('intro')}  \n                                        className='myColor myFont buttons verySmallSize smallBtns' type='submit' value='Exit'>\n                                </input>                            \n                            </div>\n                        </div>\n                    </div>\n                    <div style={deckClicked ? {display:''} : {display:'none'}} className='row whiteBorder'>\n                        {\n                            userDeck.map((c,i) => {\n                                if (i!==0){\n                                    return <Card key={i} card={c}/>\n                                }\n                            })\n                        }\n                    </div>\n                </div>\n                <div className='col-3 myColor' >\n                    <div className='row whiteBorder'>\n                        <div className='orange myFont bigSize'>Score</div>\n                        <div className='myFont smallSize'>Comp: {compScore}</div>\n                        <div className='green myFont smallSize'>{props.player.name}: {userScore}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n  )\n}\n","/Users/barmaizel/Documents/vscode/reactmain/battle-v2/src/compoments/TableRow.jsx",[],[],"/Users/barmaizel/Documents/vscode/reactmain/battle-v2/src/compoments/Card.jsx",[],[],"/Users/barmaizel/Documents/vscode/reactmain/battleGame/src/index.js",[],[],"/Users/barmaizel/Documents/vscode/reactmain/battleGame/src/App.jsx",[],[],"/Users/barmaizel/Documents/vscode/reactmain/battleGame/src/compoments/Score.jsx",[],[],"/Users/barmaizel/Documents/vscode/reactmain/battleGame/src/compoments/Intro.jsx",[],[],"/Users/barmaizel/Documents/vscode/reactmain/battleGame/src/compoments/EndGame.jsx",[],[],"/Users/barmaizel/Documents/vscode/reactmain/battleGame/src/compoments/Game.jsx",["85"],[],"/Users/barmaizel/Documents/vscode/reactmain/battleGame/src/compoments/Card.jsx",[],[],"/Users/barmaizel/Documents/vscode/reactmain/battleGame/src/compoments/TableRow.jsx",[],[],{"ruleId":"86","severity":1,"message":"87","line":115,"column":48,"nodeType":"88","messageId":"89","endLine":115,"endColumn":50},{"ruleId":"86","severity":1,"message":"87","line":115,"column":48,"nodeType":"88","messageId":"89","endLine":115,"endColumn":50},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd"]