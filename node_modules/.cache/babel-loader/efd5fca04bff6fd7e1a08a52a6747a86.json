{"ast":null,"code":"var _jsxFileName = \"/Users/barmaizel/Documents/vscode/reactmain/battle-v2/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Intro from './compoments/Intro';\nimport Game from './compoments/Game';\nimport EndGame from './compoments/EndGame';\nimport Score from './compoments/Score';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [player, setPlayer] = useState({\n    name: \"\",\n    win: 0,\n    lose: 0,\n    games: 0\n  }); // fns cards\n  // shuffle the array\n\n  function shuffle(array) {\n    let currentIndex = array.length,\n        randomIndex; // While there remain elements to shuffle.\n\n    while (currentIndex !== 0) {\n      // Pick a remaining element.\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--; // And swap it with the current element.\n\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  }\n\n  ; // crate 52 card package with 4 of a kind to every card\n\n  function crateCardsPack() {\n    let cards_package = [];\n\n    for (let i = 1; i <= 13; i++) {\n      for (let j = 1; j <= 4; j++) {\n        cards_package.push(i);\n      }\n    }\n\n    return cards_package;\n  }\n\n  ; // returns 2 arrays with cards ofr palyer and comp\n\n  function getTwoRandomPacks() {\n    let cards = crateCardsPack();\n    let pack1 = [];\n    let pack2 = [];\n    shuffle(cards);\n\n    for (let i = 0; i < 26; i++) {\n      pack1.push(cards[i]);\n    }\n\n    for (let i = 26; i < 52; i++) {\n      pack2.push(cards[i]);\n    }\n\n    return [pack1, pack2];\n  }\n\n  ; //alert\n\n  const notify = text => toast(text);\n\n  const [lastGameRes, setLastGameRes] = useState(''); // login Fncs\n\n  const [playerLoggedIn, setPlayerLoggedIn] = useState(false);\n\n  const logoutFn = () => {\n    setPlayerLoggedIn(false);\n    setPlayer({\n      name: '',\n      win: 0,\n      lose: 0,\n      games: 0\n    });\n  }; // setname player - login\n\n\n  const setName = n => {\n    setPlayerLoggedIn(true);\n    let tmpPlayer;\n    tmpPlayer = players.filter(p => p.name === n)[0];\n\n    if (tmpPlayer) {\n      setPlayer(tmpPlayer);\n    } else {\n      let tmpAr = [...players];\n      let newPlayer = {\n        name: n,\n        win: 0,\n        lose: 0,\n        games: 0\n      };\n      tmpAr.push(newPlayer);\n      setPlayers([...tmpAr]);\n      setPlayer(newPlayer);\n    }\n  }; // win , lose , games\n\n\n  const addWinToPlayer = () => {\n    setPlayer({\n      name: player.name,\n      win: player.win + 1,\n      lose: player.lose,\n      games: player.games + 1\n    });\n  };\n\n  const addGameToPlayer = () => {\n    setPlayer({\n      name: player.name,\n      win: player.win,\n      lose: player.lose,\n      games: player.games + 1\n    });\n  };\n\n  const addLoseToPlayer = () => {\n    setPlayer({\n      name: player.name,\n      win: player.win,\n      lose: player.lose + 1,\n      games: player.games + 1\n    });\n  }; // score board \n\n\n  const playersAr = [];\n  const [players, setPlayers] = useState(playersAr);\n\n  const addPlayerToScoreTable = () => {\n    let tmpAr = [...players];\n    let playerIndex;\n    tmpAr.forEach((p, i) => {\n      if (p.name === player.name) {\n        playerIndex = i;\n      }\n    });\n    tmpAr[playerIndex] = player;\n    setPlayers([...tmpAr]);\n  }; // pages \n\n\n  const pages = {\n    intro: 'intro',\n    game: 'game',\n    end: 'end',\n    score: 'score'\n  };\n  const [currentPage, setCurrentPage] = useState(pages.intro);\n\n  const changePage = pageName => {\n    setCurrentPage(pageName);\n  };\n\n  const switchPage = () => {\n    switch (currentPage) {\n      case pages.intro:\n        return /*#__PURE__*/_jsxDEV(Intro, {\n          notify: notify,\n          player: player,\n          logoutFn: logoutFn,\n          playerLoggedIn: playerLoggedIn,\n          changePage: changePage,\n          setName: setName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 16\n        }, this);\n\n      case pages.game:\n        return /*#__PURE__*/_jsxDEV(Game, {\n          notify: notify,\n          addGameToPlayer: addGameToPlayer,\n          player: player,\n          changePage: changePage,\n          addWinToPlayer: addWinToPlayer,\n          addLoseToPlayer: addLoseToPlayer,\n          getTwoRandomPacks: getTwoRandomPacks,\n          setLastGameRes: setLastGameRes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 16\n        }, this);\n\n      case pages.end:\n        return /*#__PURE__*/_jsxDEV(EndGame, {\n          lastGameRes: lastGameRes,\n          addPlayerToScoreTable: addPlayerToScoreTable,\n          players: players,\n          changePage: changePage,\n          player: player\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 16\n        }, this);\n\n      case pages.score:\n        return /*#__PURE__*/_jsxDEV(Score, {\n          changePage: changePage,\n          players: players\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 16\n        }, this);\n\n      default:\n        break;\n    }\n  }; // app\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [switchPage(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"green\",\n          children: \"Created by Bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"n+lxRK3PVbk1rpm+be9JCobHqRY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Intro","Game","EndGame","Score","useState","toast","App","player","setPlayer","name","win","lose","games","shuffle","array","currentIndex","length","randomIndex","Math","floor","random","crateCardsPack","cards_package","i","j","push","getTwoRandomPacks","cards","pack1","pack2","notify","text","lastGameRes","setLastGameRes","playerLoggedIn","setPlayerLoggedIn","logoutFn","setName","n","tmpPlayer","players","filter","p","tmpAr","newPlayer","setPlayers","addWinToPlayer","addGameToPlayer","addLoseToPlayer","playersAr","addPlayerToScoreTable","playerIndex","forEach","pages","intro","game","end","score","currentPage","setCurrentPage","changePage","pageName","switchPage"],"sources":["/Users/barmaizel/Documents/vscode/reactmain/battle-v2/src/App.jsx"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Intro from './compoments/Intro';\nimport Game from './compoments/Game';\nimport EndGame from './compoments/EndGame';\nimport Score from './compoments/Score';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n  const [player, setPlayer] = useState({\n    name:\"\",\n    win:0,\n    lose:0,\n    games:0\n  });\n  // fns cards\n  // shuffle the array\n  function shuffle(array) {\n    let currentIndex = array.length,  randomIndex;\n    // While there remain elements to shuffle.\n    while (currentIndex !== 0) {\n      // Pick a remaining element.\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n    return array;\n  };\n  // crate 52 card package with 4 of a kind to every card\n  function crateCardsPack(){\n    let cards_package = [];\n    for (let i=1;i<=13;i++){\n      for (let j=1;j<=4;j++){\n        cards_package.push(i)\n      }\n    }\n    return cards_package;\n  };\n  // returns 2 arrays with cards ofr palyer and comp\n  function getTwoRandomPacks(){\n    let cards = crateCardsPack();\n    let pack1 = [];\n    let pack2 = [];\n    shuffle(cards);\n    for (let i=0;i<26;i++){\n      pack1.push(cards[i]);\n    }\n    for (let i=26;i<52;i++){\n      pack2.push(cards[i]);\n    }\n    return [pack1,pack2];\n  };\n  //alert\n  const notify = (text) => toast(text);\n  const [lastGameRes, setLastGameRes] = useState('')\n  // login Fncs\n  const [playerLoggedIn, setPlayerLoggedIn] = useState(false)\n  const logoutFn = () =>{\n    setPlayerLoggedIn(false);\n    setPlayer({\n      name: '',\n      win: 0,\n      lose: 0,\n      games: 0,\n    })\n  }\n  // setname player - login\n  const setName = (n) =>{\n    setPlayerLoggedIn(true);\n    let tmpPlayer;\n    tmpPlayer = players.filter(p=>p.name===n)[0];\n    if (tmpPlayer){\n      setPlayer(tmpPlayer)\n    }else{\n      let tmpAr = [...players];\n      let newPlayer ={\n        name: n,\n        win: 0,\n        lose: 0,\n        games: 0,\n      };\n      tmpAr.push(newPlayer);\n      setPlayers([...tmpAr])\n      setPlayer(newPlayer)\n    }\n  };\n  // win , lose , games\n  const addWinToPlayer = () =>{\n    setPlayer({\n      name: player.name,\n      win: player.win+1,\n      lose: player.lose,\n      games: player.games+1,\n    })\n  };\n  const addGameToPlayer = () =>{\n    setPlayer({\n      name: player.name,\n      win: player.win,\n      lose: player.lose,\n      games: player.games+1,\n    })\n  };\n  const addLoseToPlayer = () =>{\n    setPlayer({\n      name: player.name,\n      win: player.win,\n      lose: player.lose+1,\n      games: player.games+1,\n    })\n  };\n  // score board \n  const playersAr=[];\n  const [players, setPlayers] = useState(playersAr);\n  const addPlayerToScoreTable = () =>{\n    let tmpAr=[...players]\n    let playerIndex;\n    tmpAr.forEach((p,i)=>{\n      if (p.name === player.name){\n        playerIndex = i;\n      }\n    })\n    tmpAr[playerIndex] = player;\n    setPlayers([...tmpAr])\n  }  \n\n  // pages \n  const pages = {\n    intro:'intro',\n    game:'game',\n    end:'end',\n    score:'score'\n  };\n  const [currentPage, setCurrentPage] = useState(pages.intro)\n  const changePage = (pageName) =>{\n    setCurrentPage(pageName)\n  }\n\n  const switchPage = () =>{\n    switch (currentPage) {\n      case pages.intro:\n        return <Intro notify={notify} player={player} logoutFn={logoutFn} \n                playerLoggedIn={playerLoggedIn} changePage={changePage} setName={setName}/>\n      case pages.game:\n        return <Game notify={notify} addGameToPlayer={addGameToPlayer}  player={player}  changePage={changePage} \n                addWinToPlayer={addWinToPlayer} addLoseToPlayer={addLoseToPlayer} \n                getTwoRandomPacks={getTwoRandomPacks} setLastGameRes={setLastGameRes}/>\n      case pages.end:\n        return <EndGame lastGameRes={lastGameRes} addPlayerToScoreTable={addPlayerToScoreTable} players={players} \n                changePage={changePage} player={player}/>\n      case pages.score:\n        return <Score changePage={changePage} players={players}/>\n      default:\n        break;\n    }\n  };\n\n  // app\n  return (\n    <div className=\"App\">\n      {switchPage()}\n      <div className='container'>\n        <footer><h2 className='green'>Created by Bar</h2></footer>\n      </div>\n    </div>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}