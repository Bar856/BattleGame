{"ast":null,"code":"import _slicedToArray from\"/Users/barmaizel/Documents/vscode/reactmain/battle-v2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import{useState}from'react';import Card from'./Card';import{ToastContainer}from'react-toastify';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Game(props){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),compScore=_useState2[0],setCompScore=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),userScore=_useState4[0],setUserScore=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),compDeck=_useState6[0],setCompDeck=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),userDeck=_useState8[0],setUserDeck=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),round=_useState10[0],setRound=_useState10[1];var _useState11=useState('HIT'),_useState12=_slicedToArray(_useState11,2),hitButton=_useState12[0],setHitButton=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),deckClicked=_useState14[0],setDeckClicked=_useState14[1];var deckFn=function deckFn(){setDeckClicked(true);document.getElementById(\"deckBtn\").disabled=true;var arrays=props.getTwoRandomPacks();setCompScore(0);setUserScore(0);setRound(1);setCompDeck(arrays[0]);setUserDeck(arrays[1]);};var checkForFinish=function checkForFinish(){if(compScore>userScore){props.addLoseToPlayer();props.setLastGameRes(\"You Lose\");}else if(compScore<userScore){props.addWinToPlayer();props.setLastGameRes(\"You Won!\");}else{props.addGameToPlayer();props.setLastGameRes('Tie!');}return props.changePage('end');};var checkScore=function checkScore(){if(compDeck[0]>userDeck[0]){setCompScore(compScore+1);}else if(userDeck[0]>compDeck[0]){setUserScore(userScore+1);}};var getNextCards=function getNextCards(){setCompDeck(compDeck.splice(1,compDeck.length));setUserDeck(userDeck.splice(1,userDeck.length));};var hitBtnFn=function hitBtnFn(){if(deckClicked){if(round===26){setHitButton('FINISH');}if(round<27){checkScore();getNextCards();setRound(round+1);}else{checkForFinish();}}else{props.notify('Get Cards First!');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(ToastContainer,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-3 myColor\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row whiteBorder\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"myFont smallSize\",children:[\"Round NO. \",round]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"row whiteBorder\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"orange myFont bigSize\",children:\"All Games\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"myFont smallSize\",children:[\"loses: \",props.player.lose]}),/*#__PURE__*/_jsxs(\"div\",{className:\"green myFont smallSize\",children:[\"Wins : \",props.player.win]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-6 whiteBorder\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\" blurBg myColor myFont\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row col-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-8\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-3\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"bigSize\",children:\"Computer\"}),/*#__PURE__*/_jsx(\"div\",{className:\"deckCards\",children:/*#__PURE__*/_jsx(Card,{card:compDeck[0]})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row col3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-7\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-3\",children:[/*#__PURE__*/_jsx(Card,{card:userDeck[0]}),/*#__PURE__*/_jsx(\"h2\",{className:\"bigSize playerNameOnGame\",children:props.player.name})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-4\",children:/*#__PURE__*/_jsx(\"input\",{className:\"myColor myFont buttons smallSize gameButtons\",type:\"submit\",id:\"deckBtn\",value:\"Get Cards\",onClick:deckFn})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-4\",children:/*#__PURE__*/_jsx(\"input\",{className:\" myColor myFont buttons smallSize gameButtons\",onClick:hitBtnFn,type:\"submit\",value:hitButton})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-4\",children:/*#__PURE__*/_jsx(\"input\",{onClick:function onClick(){return props.changePage('intro');},className:\"myColor myFont buttons verySmallSize smallBtns\",type:\"submit\",value:\"Exit\"})})]})]}),/*#__PURE__*/_jsx(\"div\",{style:deckClicked?{display:''}:{display:'none'},className:\"row whiteBorder\",children:userDeck.map(function(c,i){if(i!==0){return/*#__PURE__*/_jsx(Card,{card:c},i);}})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"col-3 myColor\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row whiteBorder\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"orange myFont bigSize\",children:\"Score\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"myFont smallSize\",children:[\"Comp: \",compScore]}),/*#__PURE__*/_jsxs(\"div\",{className:\"green myFont smallSize\",children:[props.player.name,\": \",userScore]})]})})]})]});}","map":{"version":3,"names":["React","useState","Card","ToastContainer","Game","props","compScore","setCompScore","userScore","setUserScore","compDeck","setCompDeck","userDeck","setUserDeck","round","setRound","hitButton","setHitButton","deckClicked","setDeckClicked","deckFn","document","getElementById","disabled","arrays","getTwoRandomPacks","checkForFinish","addLoseToPlayer","setLastGameRes","addWinToPlayer","addGameToPlayer","changePage","checkScore","getNextCards","splice","length","hitBtnFn","notify","player","lose","win","name","display","map","c","i"],"sources":["/Users/barmaizel/Documents/vscode/reactmain/battle-v2/src/compoments/Game.jsx"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react';\nimport Card from './Card'\nimport { ToastContainer } from 'react-toastify';\n\nexport default function Game(props) {\n    const [compScore, setCompScore] = useState(0);\n    const [userScore, setUserScore] = useState(0);\n    const [compDeck, setCompDeck] = useState([]);\n    const [userDeck, setUserDeck] = useState([]);\n    const [round, setRound] = useState(0)\n    const [hitButton, setHitButton] = useState('HIT')\n    const [deckClicked, setDeckClicked] = useState(false)\n    const deckFn = () =>{\n        setDeckClicked(true);\n        document.getElementById(\"deckBtn\").disabled=true;\n        let arrays = props.getTwoRandomPacks();\n        setCompScore(0);\n        setUserScore(0);\n        setRound(1);\n        setCompDeck(arrays[0])\n        setUserDeck(arrays[1])\n    }\n    const checkForFinish = () =>{\n        if (compScore > userScore){\n            props.addLoseToPlayer();\n            props.setLastGameRes(\"You Lose\");\n        }\n        else if (compScore < userScore){\n            props.addWinToPlayer();\n            props.setLastGameRes(\"You Won!\");\n        }else{\n            props.addGameToPlayer();\n            props.setLastGameRes('Tie!')\n        }\n        return props.changePage('end')\n    }\n    const checkScore = () => {\n        if (compDeck[0] > userDeck[0]){\n            setCompScore(compScore+1)\n        } else if (userDeck[0] > compDeck[0]){\n            setUserScore(userScore+1)\n        }\n    }\n    const getNextCards= () =>{\n        setCompDeck(compDeck.splice(1,compDeck.length))\n        setUserDeck(userDeck.splice(1,userDeck.length))\n    }\n    const hitBtnFn = () =>{\n        if(deckClicked){\n            if (round===26){\n                setHitButton('FINISH');\n            }\n            if(round<27){\n                checkScore();\n                getNextCards();\n                setRound(round+1);\n            }else{\n                checkForFinish();\n            }\n        }else{\n            props.notify('Get Cards First!')\n        }\n    };\n    return (\n        <div className='container'>\n            <ToastContainer/>\n            <div className='row'>\n                <div className='col-3 myColor'>\n                    <div className='row whiteBorder'>\n                        <div className='myFont smallSize'>Round NO. {round}</div>\n                    </div>\n                    <div className='row whiteBorder'>\n                        <div className='orange myFont bigSize'>All Games</div>\n                        <div className='myFont smallSize'>loses: {props.player.lose}</div>\n                        <div className='green myFont smallSize'>Wins : {props.player.win}</div>\n                    </div>\n                </div>\n                <div className='col-6 whiteBorder'>\n                    <div className=' blurBg myColor myFont'>\n                        <div className='row col-3'>\n                            <div className='col-8'>\n                            </div>\n                            <div className='col-3'>\n                                <h2 className='bigSize'>Computer</h2>\n                                <div className='deckCards'>\n                                    {<Card card={compDeck[0]}/>}\n                                </div> \n                            </div>\n                        </div>\n                        <div className='row col3'>\n                            <div className='col-7'>\n                            </div>\n                            <div className='col-3'>\n                                {<Card card={userDeck[0]}/>}\n                                <h2 className='bigSize playerNameOnGame'>{props.player.name}</h2>\n                            </div>\n                        </div>\n                        <div className='row'>\n                            <div className='col-4'>\n                                <input className='myColor myFont buttons smallSize gameButtons' type={\"submit\"} id='deckBtn' value=\"Get Cards\" onClick={deckFn}></input>\n                            </div>\n                            <div className='col-4'>\n                                <input className=' myColor myFont buttons smallSize gameButtons' onClick={hitBtnFn} type=\"submit\" value={hitButton}></input>            \n                            </div>\n                            <div className='col-4'>\n                                <input onClick={()=>props.changePage('intro')}  \n                                        className='myColor myFont buttons verySmallSize smallBtns' type='submit' value='Exit'>\n                                </input>                            \n                            </div>\n                        </div>\n                    </div>\n                    <div style={deckClicked ? {display:''} : {display:'none'}} className='row whiteBorder'>\n                        {\n                            userDeck.map((c,i) => {\n                                if (i!==0){\n                                    return <Card key={i} card={c}/>\n                                }\n                            })\n                        }\n                    </div>\n                </div>\n                <div className='col-3 myColor' >\n                    <div className='row whiteBorder'>\n                        <div className='orange myFont bigSize'>Score</div>\n                        <div className='myFont smallSize'>Comp: {compScore}</div>\n                        <div className='green myFont smallSize'>{props.player.name}: {userScore}</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}